// This File was auto generated by LemmyKitCodeGen and should not be modified.
//
// File: Register.swift

import Foundation

public struct Register: APIRequest {
	public typealias Response = LoginResponse

	public static let path = "/user/register"
	public static let httpMethod = HTTPMethod.post

	public var username: String
	public var password: String
	public var passwordVerify: String
	public var showNSFW: Bool
	public var email: String?
	public var captchaUUID: String?
	public var captchaAnswer: String?
	public var honeypot: String?
	public var answer: String?

	public init(
		username: String,
		password: String,
		passwordVerify: String,
		showNSFW: Bool,
		email: String? = nil,
		captchaUUID: String? = nil,
		captchaAnswer: String? = nil,
		honeypot: String? = nil,
		answer: String? = nil
	) {
		self.username = username
		self.password = password
		self.passwordVerify = passwordVerify
		self.showNSFW = showNSFW
		self.email = email
		self.captchaUUID = captchaUUID
		self.captchaAnswer = captchaAnswer
		self.honeypot = honeypot
		self.answer = answer
	}

	public enum CodingKeys: String, CodingKey {
		case username
		case password
		case passwordVerify = "password_verify"
		case showNSFW = "show_nsfw"
		case email
		case captchaUUID = "captcha_uuid"
		case captchaAnswer = "captcha_answer"
		case honeypot
		case answer
	}
}

public extension LemmyInstance {
	func register(
		username: String,
		password: String,
		passwordVerify: String,
		showNSFW: Bool,
		email: String? = nil,
		captchaUUID: String? = nil,
		captchaAnswer: String? = nil,
		honeypot: String? = nil,
		answer: String? = nil
	) async throws -> Register.Response {
		try await request(Register(
			username: username,
			password: password,
			passwordVerify: passwordVerify,
			showNSFW: showNSFW,
			email: email,
			captchaUUID: captchaUUID,
			captchaAnswer: captchaAnswer,
			honeypot: honeypot,
			answer: answer
		))
	}
}
