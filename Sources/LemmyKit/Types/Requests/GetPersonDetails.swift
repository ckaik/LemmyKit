// This File was auto generated by LemmyKitCodeGen and should not be modified.
//
// File: GetPersonDetails.swift

import Foundation

public struct GetPersonDetails: APIRequest {
	public typealias Response = GetPersonDetailsResponse

	public static let path = "/user"
	public static let httpMethod = HTTPMethod.get

	public var personId: Int?
	public var username: String?
	public var sort: SortType?
	public var page: Int?
	public var limit: Int?
	public var communityId: Int?
	public var savedOnly: Bool?
	public var auth: String?

	public init(
		personId: Int? = nil,
		username: String? = nil,
		sort: SortType? = nil,
		page: Int? = nil,
		limit: Int? = nil,
		communityId: Int? = nil,
		savedOnly: Bool? = nil,
		auth: String? = nil
	) {
		self.personId = personId
		self.username = username
		self.sort = sort
		self.page = page
		self.limit = limit
		self.communityId = communityId
		self.savedOnly = savedOnly
		self.auth = auth
	}

	public enum CodingKeys: String, CodingKey {
		case personId = "person_id"
		case username
		case sort
		case page
		case limit
		case communityId = "community_id"
		case savedOnly = "saved_only"
		case auth
	}
}

public extension LemmyInstance {
	func getPersonDetails(
		personId: Int? = nil,
		username: String? = nil,
		sort: SortType? = nil,
		page: Int? = nil,
		limit: Int? = nil,
		communityId: Int? = nil,
		savedOnly: Bool? = nil,
		auth: String? = nil
	) async throws -> GetPersonDetails.Response {
		try await request(GetPersonDetails(
			personId: personId,
			username: username,
			sort: sort,
			page: page,
			limit: limit,
			communityId: communityId,
			savedOnly: savedOnly,
			auth: auth
		))
	}
}
